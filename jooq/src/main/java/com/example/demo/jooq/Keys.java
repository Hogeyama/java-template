/*
 * This file is generated by jOOQ.
 */
package com.example.demo.jooq;


import com.example.demo.jooq.tables.RevokedTokens;
import com.example.demo.jooq.tables.Roles;
import com.example.demo.jooq.tables.UserRoles;
import com.example.demo.jooq.tables.Users;
import com.example.demo.jooq.tables.records.RevokedTokensRecord;
import com.example.demo.jooq.tables.records.RolesRecord;
import com.example.demo.jooq.tables.records.UserRolesRecord;
import com.example.demo.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RevokedTokensRecord> REVOKED_TOKENS_JTI_IDX = Internal.createUniqueKey(RevokedTokens.REVOKED_TOKENS, DSL.name("revoked_tokens_jti_idx"), new TableField[] { RevokedTokens.REVOKED_TOKENS.JTI }, true);
    public static final UniqueKey<RevokedTokensRecord> REVOKED_TOKENS_PKEY = Internal.createUniqueKey(RevokedTokens.REVOKED_TOKENS, DSL.name("revoked_tokens_pkey"), new TableField[] { RevokedTokens.REVOKED_TOKENS.ID }, true);
    public static final UniqueKey<RolesRecord> ROLES_NAME_KEY = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_name_key"), new TableField[] { Roles.ROLES.NAME }, true);
    public static final UniqueKey<RolesRecord> ROLES_PKEY = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_pkey"), new TableField[] { Roles.ROLES.ID }, true);
    public static final UniqueKey<UserRolesRecord> USER_ROLES_PKEY = Internal.createUniqueKey(UserRoles.USER_ROLES, DSL.name("user_roles_pkey"), new TableField[] { UserRoles.USER_ROLES.USER_ID, UserRoles.USER_ROLES.ROLE_ID }, true);
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_USERNAME_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_username_key"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<RevokedTokensRecord, UsersRecord> REVOKED_TOKENS__REVOKED_TOKENS_CREATED_BY_USER_ID_FKEY = Internal.createForeignKey(RevokedTokens.REVOKED_TOKENS, DSL.name("revoked_tokens_created_by_user_id_fkey"), new TableField[] { RevokedTokens.REVOKED_TOKENS.CREATED_BY_USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UserRolesRecord, RolesRecord> USER_ROLES__USER_ROLES_ROLE_ID_FKEY = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("user_roles_role_id_fkey"), new TableField[] { UserRoles.USER_ROLES.ROLE_ID }, Keys.ROLES_PKEY, new TableField[] { Roles.ROLES.ID }, true);
    public static final ForeignKey<UserRolesRecord, UsersRecord> USER_ROLES__USER_ROLES_USER_ID_FKEY = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("user_roles_user_id_fkey"), new TableField[] { UserRoles.USER_ROLES.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
}
